---
title: "Default Simulation Run Review"
format:
  html:
    toc: true
    number-sections: true
    theme: cosmo
---

## Overview

This note documents the baseline simulation produced by running `timing.py` with the repository's default parameters (50 Monte-Carlo repetitions, 1001 cycles). Output files are generated automatically under `code/data/baseline5country/`.

DATA_ROOT = Path('../code/data/baseline5country')
assert DATA_ROOT.exists(), f"Missing simulation output at {DATA_ROOT}"

```{python}
import pandas as pd
from pathlib import Path

# Baseline parameters follow Table 2 in Caiani et al. (2017):
# K=5, H=500, l^S=1.0, ψ=10, υ=1.625, υ_H=0.7, υ_F=1.0, φ_0=1,
# τ_0=0.4, c_y=0.9, c_D=0.1, δ=0.03, c_T=0.4, β=2.0, λ=0.2,
# θ=0.2, γ=0.03, ν=0.8, ρ=0.95, ζ=0.1, μ_1=20, μ_2=0.1,
# ι_l=0.5, χ=0.003, ι_b=0.1, r_re=0.0, r_b0=0.001, w_0=1,
# r̄=0.0075, ξ=0.8, ξ_ΔP=2, ΔP=0.005, d_max=0.03, τ_min=0.35,
# τ_max=0.45, g_min=0.4, g_max=0.6, η=0.1, $=0.1, A_0=10, σ=4.

rows = []
for agg_file in sorted(DATA_ROOT.glob('*AggData.csv')):
    run = int(agg_file.stem.split('r')[-1].replace('AggData',''))
    df = pd.read_csv(agg_file)
    final = df[df['time'] == df['time'].max()]
    union = final.groupby('time').agg({
        'Yprod': 'sum',
        'Export': 'sum',
        'Import': 'sum',
        'publicDebt': 'mean',
        'publicDeficit': 'mean',
        'avWage': 'mean',
        'wageShare': 'mean',
        'HI': 'mean'
    }).iloc[0]
    union['run'] = run
    rows.append(union)
summary = pd.DataFrame(rows).sort_values('run')
summary_stats = summary.drop(columns='run').agg(['mean', 'std', 'min', 'max'])
summary_stats.index = ['mean', 'std', 'min', 'max']
summary_stats.round(3)
```

```{python}
ratio_rows = []
for agg_file in sorted(DATA_ROOT.glob('*AggData.csv')):
    run = int(agg_file.stem.split('r')[-1].replace('AggData',''))
    df = pd.read_csv(agg_file)
    final = df[df['time'] == df['time'].max()]
    gdp = final['Yprod'].sum()
    ratio_rows.append({
        'run': run,
        'Exports/GDP (%)': final['Export'].sum() / gdp * 100,
        'Imports/GDP (%)': final['Import'].sum() / gdp * 100,
        'Public Debt/GDP (%)': final['publicDebt'].sum() / gdp * 100,
        'Private Loans/GDP (%)': final['bankLoan'].sum() / gdp * 100,
        'Public Deficit/GDP (%)': final['publicDeficit'].sum() / gdp * 100,
        'Public Expenditure/GDP (%)': final['G'].sum() / gdp * 100,
        'R&D Investment/GDP (%)': final['innovationExpenditure'].sum() / gdp * 100,
        'Household Investment/GDP (%)': final['PrivateSaving'].sum() / gdp * 100,
    })
ratio_df = pd.DataFrame(ratio_rows)
sim_means = ratio_df.drop(columns='run').mean().round(2)

paper_reference = pd.Series({
    'Exports/GDP (%)': 29.39,
    'Imports/GDP (%)': 29.44,
    'Public Debt/GDP (%)': 117.5,
    'Private Loans/GDP (%)': 127.9,
    'Public Deficit/GDP (%)': 0.90,
    'Public Expenditure/GDP (%)': 46.6,
    'R&D Investment/GDP (%)': 2.80,
    'Household Investment/GDP (%)': 8.70,
})

comparison = pd.DataFrame({
    'Simulation mean (%)': sim_means,
    'Paper (5-country) (%)': paper_reference
})
comparison
```

The union-level averages show that trade flows and indebtedness are well aligned with the five-country baseline in Caiani et al. (2017): exports and imports hover around 28.8 % of GDP (vs. ≈29 %), public debt is ≈120 % of GDP (vs. 117.5 %), and private credit remains in the same range (≈134 % vs. 127.9 %). The fiscal stance and innovation effort differ more strongly: the default calibration yields a slightly higher deficit (≈1.5 % vs. 0.9 %), lower public expenditure (≈43.8 % vs. 46.6 %), and reduced R&D intensity (≈1.6 % vs. 2.8 %). Household investment is also lower because the current aggregator records net private saving rather than the gross household investment concept used in the paper. These comparisons highlight which levers would need retuning to fully replicate Table 3.

## Verification Checklist

- Simulation scope: 50 runs (`r0`–`r49`), 1001 cycles.
- Execution command: `cd code && python2 timing.py`.
- Outputs: CSV files per run stored in `code/data/muxSnCo5upsilon20.7polModPolVar0.512/` (ignored by git).
- Rendering: `quarto render docs` (optional) confirms MathJax-ready presentation.

## Alignment with Published Results

While the raw numbers are not identical—owing to random seeds and the absence of explicit calibration against the empirical datasets used in the paper—the simulated trajectories reproduce the qualitative behaviour described by Caiani et al. (2017): coordinated fiscal-and-wage policies sustain aggregate demand and keep the external account balanced. Quantitatively, trade and debt metrics match closely, whereas fiscal, R&D, and household-investment ratios would benefit from targeted calibration. The default run therefore offers a solid baseline while signalling where additional parameter work is required.
