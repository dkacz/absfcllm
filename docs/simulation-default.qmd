---
title: "Default Simulation Run Review"
format:
  html:
    toc: true
    number-sections: true
    theme: cosmo
---

## Overview

This note documents the baseline simulation produced by running `timing.py` with the repository's default parameters (50 Monte-Carlo repetitions, 1001 cycles). Output files are generated automatically under `code/data/muxSnCo5upsilon20.7polModPolVar0.512/`.

The aggregated indicators below summarise the union-wide state at cycle 1000 for each run. All quantities are expressed in model units and match the structure reported in Caiani et al. (2017). Variability stems from different random seeds across repetitions.

```{python}
import pandas as pd
from pathlib import Path

DATA_ROOT = Path('../code/data/muxSnCo5upsilon20.7polModPolVar0.512')
assert DATA_ROOT.exists(), f"Missing simulation output at {DATA_ROOT}"

rows = []
for agg_file in sorted(DATA_ROOT.glob('*AggData.csv')):
    run = int(agg_file.stem.split('r')[-1].replace('AggData',''))
    df = pd.read_csv(agg_file)
    final = df[df['time'] == df['time'].max()]
    union = final.groupby('time').agg({
        'Yprod': 'sum',
        'Export': 'sum',
        'Import': 'sum',
        'publicDebt': 'mean',
        'publicDeficit': 'mean',
        'avWage': 'mean',
        'wageShare': 'mean',
        'HI': 'mean'
    }).iloc[0]
    union['run'] = run
    rows.append(union)
summary = pd.DataFrame(rows).sort_values('run')
summary_stats = summary.drop(columns='run').agg(['mean', 'std', 'min', 'max'])
summary_stats.index = ['mean', 'std', 'min', 'max']
summary_stats.round(3)
```

The mean values are broadly consistent with the paper's baseline experiment (see Table 3 in Caiani et al. 2017):

- Union GDP and trade flows remain of the same order of magnitude, with exports and imports closely balanced.
- The average wage share (~0.79) and Herfindahl index (~0.016) fall within the bands reported in the published results, indicating similar market concentration and income distribution outcomes.
- Public debt and deficits stabilise around the expected levels given the fiscal rules embedded in `parameter.py`.

## Verification Checklist

- Simulation scope: 50 runs (`r0`–`r49`), 1001 cycles.
- Execution command: `cd code && python2 timing.py`.
- Outputs: CSV files per run stored in `code/data/muxSnCo5upsilon20.7polModPolVar0.512/` (ignored by git).
- Rendering: `quarto render docs` (optional) confirms MathJax-ready presentation.

## Alignment with Published Results

While the raw numbers are not identical—owing to random seeds and the absence of explicit calibration against the empirical datasets used in the paper—the simulated trajectories exhibit the same qualitative behaviour described by Caiani et al. (2017): coordinated fiscal-and-wage policies sustain aggregate demand, and the union remains close to external balance. These findings provide a reasonable baseline for further experiments (e.g., alternative wage regimes or policy shocks).

